/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import com.lowagie.text.Chunk;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.HoaDon;
import model.HoaDonChiTiet;
import model.KhachHang;
import model.NhanVien;
import model.sanphamchitietmolde;
import model.sanphamchitietmolde2;
import service.KhachHangService;
import service.NhanVienService;
import service.svImei;
import service.svchitietsanpham;
import service.svhoadon;
import service.svhoadonchitiet;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.SwingUtilities;
import model.giamgiamolde;
import service.svgiamgia;

/**
 *
 * @author ACER
 */
public class ChucNangBanHang extends javax.swing.JFrame {

    List<sanphamchitietmolde> listCTSP = new ArrayList<>();
    List<HoaDon> listhoadon = new ArrayList<>();
    List<HoaDonChiTiet> listcthd = new ArrayList<>();
    svchitietsanpham spct = new svchitietsanpham();
    DefaultTableModel data;
    DefaultTableModel model;
    DefaultTableModel data2;
    svImei im = new svImei();
    svhoadon hd = new svhoadon();
    svhoadonchitiet hdctt = new svhoadonchitiet();
    KhachHangService kh = new KhachHangService();
    NhanVienService nv = new NhanVienService();
    svgiamgia gg = new svgiamgia();

    /**
     */
    public ChucNangBanHang() {
        initComponents();
        data = (DefaultTableModel) tblspct.getModel();
        model = (DefaultTableModel) tblhoadon.getModel();
        data2 = (DefaultTableModel) otherTable.getModel();
        fillChiTietSanPHam();
        fillhoadon();
        fillComboBoxes();
        fillhoadonCT();
        tinhtienthua();
    }

    private void tinhtienthua() {
        String soTienKhachDuaText = txtkhachdua.getText();
        String currentTotal = lbltongtien.getText();

        // Kiểm tra xem có chuỗi nào rỗng không
        if (!soTienKhachDuaText.isEmpty() && !currentTotal.isEmpty()) {
            try {
                double soTienKhachDua = Double.parseDouble(soTienKhachDuaText);
                double total = Double.parseDouble(currentTotal.replaceAll("[^\\d.]", ""));

                double soTienTraLai = soTienKhachDua - total;

                // Sử dụng DecimalFormat để giới hạn số lẻ sau dấu phẩy
                DecimalFormat df = new DecimalFormat("#.##");
                String ketQuaTraLaiText = df.format(soTienTraLai);

                // Đặt giá trị vào txttralai trong luồng EDT
                SwingUtilities.invokeLater(() -> txttralai.setText(ketQuaTraLaiText));
            } catch (NumberFormatException e) {
                e.printStackTrace();
                // Xử lý khi không thể chuyển đổi thành số
            }
        } else {
            // Xử lý khi có chuỗi rỗng
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbonhanvien = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtmahoadon = new javax.swing.JTextField();
        lbltongtien = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        cbokhachhang = new javax.swing.JComboBox<>();
        jdate = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        cbogiamgia = new javax.swing.JComboBox<>();
        apdung = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtkhachdua = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txttralai = new javax.swing.JTextField();
        tralai2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblspct = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhoadon = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        otherTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setToolTipText("");
        jPanel1.setPreferredSize(new java.awt.Dimension(1165, 683));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Khách hàng: ");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Nhân viên:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Ngày tạo: ");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("ID hóa đơn:");

        lbltongtien.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbltongtien.setText("Tổng Tiền ");

        jButton3.setBackground(new java.awt.Color(255, 204, 0));
        jButton3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton3.setText("THANH TOÁN ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cbokhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cbokhachhangMouseExited(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 204, 0));
        jButton4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton4.setText("Làm mới ");
        jButton4.setAutoscrolls(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 204, 0));
        jButton5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton5.setText("In hóa đơn");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        apdung.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        apdung.setText("Áp Dụng");
        apdung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apdungActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Mã giảm giá:");

        txtkhachdua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtkhachduaMouseExited(evt);
            }
        });
        txtkhachdua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkhachduaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Khách đưa:");

        txttralai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttralaiActionPerformed(evt);
            }
        });

        tralai2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tralai2.setText("Trả lại:");

        jButton2.setBackground(new java.awt.Color(255, 204, 0));
        jButton2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton2.setText("Tạo Hóa Đơn ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tralai2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cbonhanvien, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                    .addComponent(cbogiamgia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtmahoadon)
                                    .addComponent(txttralai, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtkhachdua)
                                    .addComponent(cbokhachhang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(apdung)
                                .addGap(29, 29, 29))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(lbltongtien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(33, 33, 33)
                        .addComponent(jButton5)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(82, 82, 82))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbokhachhang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbonhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtmahoadon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbogiamgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(apdung)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtkhachdua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttralai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tralai2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbltongtien)
                .addGap(31, 31, 31)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(52, 52, 52))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tblspct.setBackground(new java.awt.Color(255, 255, 204));
        tblspct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ CTSP", "Tên SP", "Màu Sắc", "Bộ Nhớ", "Giá Bán ", "Số Lượng"
            }
        ));
        tblspct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblspctMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblspct);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tblhoadon.setBackground(new java.awt.Color(255, 255, 204));
        tblhoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn ", "Ngày tạo ", "Người tạo ", "Trạng thái ", "Tổng tiền "
            }
        ));
        tblhoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhoadonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhoadon);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N
        jPanel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        otherTable.setBackground(new java.awt.Color(255, 255, 204));
        otherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HDCT", "Mã HD", "MÃ SPCT", "Tên SP", "Giá Bán ", "Số Lượng", "Id Imei"
            }
        ));
        otherTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                otherTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(otherTable);

        jButton1.setText("Reset HDCT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setText("Xóa Khỏi HDCT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(112, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1144, Short.MAX_VALUE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void fillChiTietSanPHam() {
        data.setRowCount(0);
        listCTSP = spct.selectall();
        for (sanphamchitietmolde sp : listCTSP) {
            data.addRow(new Object[]{sp.getMaChiTietSanPham(), sp.getTenSanPham(), sp.getMauSac(), sp.getBoNho(), sp.getGiaBan(), sp.getSoLuong()});
        }
    }

    void fillhoadon() {
        model.setRowCount(0);
        listhoadon = hd.fillall();
        for (HoaDon sp : listhoadon) {
            String trangThaiText = (sp.getTrangthai() == 0) ? "Chưa thanh toán" : "Da Thanh Toan";
            model.addRow(new Object[]{sp.getMahoadon(), sp.getNgaytao(), sp.getManv(), trangThaiText, sp.getThanhtien()});

        }

    }

    void fillhoadonCT() {
        data2.setRowCount(0);
        listcthd = hdctt.fiall();
        for (HoaDonChiTiet hdct : listcthd) {
            data2.addRow(new Object[]{hdct.getMaCTHD(), hdct.getMaHoaDon(), hdct.getMaChiTietSP(), hdct.getTenSanPham(), hdct.getGiaban(), hdct.getSoluong(), hdct.getImei()});
        }

    }

    void fillComboBoxes() {
        List<NhanVien> listNhanVien = nv.getAllNV();
        List<KhachHang> listKhachHang = kh.getAllSV();
        List<giamgiamolde> ListGiamGIa = gg.fiall();
        cbonhanvien.removeAllItems();
        for (NhanVien nv : listNhanVien) {
            cbonhanvien.addItem(nv.getID_MaNV());
        }

        cbokhachhang.removeAllItems();
        for (KhachHang kh : listKhachHang) {
            cbokhachhang.addItem(kh.getMaKH());
        }

        // lay ma giam gia
        cbogiamgia.removeAllItems();
        for (giamgiamolde ggg : ListGiamGIa) {
            cbogiamgia.addItem(ggg.getTenMaGiamGia());
        }
    }

    public class IMEIDisplayWindow extends JFrame {

        private JList<String> imeiList;
        private JButton myButton; // Nút button mới

        String mahd = txtmahoadon.getText();

        public IMEIDisplayWindow(List<String> imeiData) {
            initComponents(imeiData);
        }

        private void initComponents(List<String> imeiData) {
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setTitle("Danh sách IMEI");
            setPreferredSize(new Dimension(300, 400));

            imeiList = new JList<>(imeiData.toArray(new String[0]));
            JScrollPane scrollPane = new JScrollPane(imeiList);
            getContentPane().add(scrollPane, BorderLayout.CENTER);
            myButton = new JButton("Ok");
            getContentPane().add(myButton, BorderLayout.SOUTH);
            myButton.addActionListener(e -> {
                String selectedIMEI = imeiList.getSelectedValue();
                if (selectedIMEI != null) {
                    sanphamchitietmolde2 product = im.getProductByIMEI(selectedIMEI);
                    if (product != null) {
                        DefaultTableModel model = (DefaultTableModel) otherTable.getModel();
                        int soLuong = imeiList.getSelectedValuesList().size();
                        if (mahd.isEmpty()) {

                            JOptionPane.showMessageDialog(this, "Bạn Chưa tạo hóa đơn");
                        } else {
                            // Add the row to the table if mahd is not empty
                            model.addRow(new Object[]{
                                null,
                                mahd,
                                product.getMaChiTietSP(),
                                product.getTenSanPham(),
                                product.getGiaBan(),
                                soLuong,
                                product.getID_IMEI()
                            });
                        }
                        model.fireTableDataChanged();
                        double total = 0.0;
                        for (int i = 0; i < model.getRowCount(); i++) {
                            Object value = model.getValueAt(i, 4);
                            if (value instanceof Double) {
                                total += (Double) value;
                            } else if (value instanceof String) {
                                try {
                                    double numericValue = Double.parseDouble((String) value);
                                    total += numericValue;
                                } catch (NumberFormatException ex) {
                                    ex.printStackTrace();
                                }
                            }
                        }
                        lbltongtien.setText("Tổng tiền: " + total);
                        boolean inserted = hdctt.insertDataToDatabase(mahd, product.getMaChiTietSP(), product.getTenSanPham(), soLuong, product.getGiaBan(), String.valueOf(product.getID_IMEI()));
                        if (inserted) {
                        } else {
                        }
                        if (mahd.isEmpty()) {
                        } else {
                            boolean deleted = im.deleteIMEIFromDatabase(selectedIMEI);
                            if (deleted) {
                                DefaultListModel<String> listModel = new DefaultListModel<>();
                                imeiList = new JList<>(listModel);
                                int selectedIndex = imeiList.getSelectedIndex();
                                if (selectedIndex != -1) {
                                    listModel.removeElementAt(selectedIndex);
                                }
                            } else {

                            }
                        }
                    }
                }
            });
            pack();
            setLocationRelativeTo(null);
            setVisible(true);
        }
    }

    HoaDon getFromdata() {
        try {
            int mahoadon = Integer.parseInt(txtmahoadon.getText());
            java.util.Date ngayTaoUtil = jdate.getDate();
            java.sql.Date ngayTaoSql = new java.sql.Date(ngayTaoUtil.getTime());
            String makh = (String) cbokhachhang.getSelectedItem();
            String manv = (String) cbonhanvien.getSelectedItem();
            double thanhTien = 0.0;
            return new HoaDon(mahoadon, makh, manv, thanhTien, WIDTH, ngayTaoUtil);
        } catch (NumberFormatException e) {
            // Xử lý trường hợp người dùng nhập liệu không hợp lệ
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Mã hóa đơn không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            HoaDon manhh = getFromdata();
            if (hd.themSanPham(manhh)) {
                fillhoadon();
                JOptionPane.showMessageDialog(this, "Thêm thành công");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void tblspctMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblspctMouseClicked
        // TODO add your handling code here:
        int row = tblspct.getSelectedRow();
        if (row < 0) {
            return;
        }
        sanphamchitietmolde sp = listCTSP.get(row);
        String maChiTietSP = sp.getMaChiTietSanPham();
        List<String> imeiList = im.getIMEIsByProduct(maChiTietSP);
        new ChucNangBanHang.IMEIDisplayWindow(imeiList);
    }//GEN-LAST:event_tblspctMouseClicked

    private void tblhoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhoadonMouseClicked
        // TODO add your handling code here:
        int row = tblhoadon.getSelectedRow();
        if (row < 0) {
            return;
        }
        HoaDon hd = listhoadon.get(row);
        txtmahoadon.setText(String.valueOf(hd.getMahoadon()));
        cbokhachhang.setSelectedItem(hd.getMakhachhang());
        cbonhanvien.setSelectedItem(hd.getManv());
        jdate.setDate(hd.getNgaytao());
        lbltongtien.setText(String.valueOf(hd.getThanhtien()));


    }//GEN-LAST:event_tblhoadonMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    int maHoaDon = Integer.parseInt(txtmahoadon.getText());
    String giaLayText = lbltongtien.getText();
    String[] parts = giaLayText.split(": ");

    // Check if the split resulted in at least two parts
    if (parts.length >= 2) {
        String soTienText = parts[1].trim(); // Access the second part
        double giaLay = Double.parseDouble(soTienText);

        if (giaLay != 0) {
            boolean updateSuccess = hd.updateInvoicePriceAndStatus(maHoaDon, giaLay);
            if (updateSuccess) {
                JOptionPane.showMessageDialog(this, "Thanh Toán Thành Công  ");
                fillhoadon();
                fillChiTietSanPHam();
            } else {
                // Handle update failure if needed
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chưa thêm sản phẩm để thanh tóan");
        }
    } else {
        // Handle the case where the expected delimiter is not found
        JOptionPane.showMessageDialog(this, "Chưa thêm sản phẩm để thanh tóan");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) otherTable.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton1ActionPerformed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
             fillhoadonCT();
        fillChiTietSanPHam();
        fillhoadon();
        fillComboBoxes();
        txtkhachdua.setText(null);
        txttralai.setText(null);
        lbltongtien.setText(null);
        txtmahoadon.setText(null);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
//         TODO add your handling code here:
        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(null);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = j.getSelectedFile().getPath();
        }

        Document doc = new Document();

        try {
            String maHoaDon = txtmahoadon.getText();
            String maNhanVien = (String) cbonhanvien.getSelectedItem();
            String makhakh = (String) cbokhachhang.getSelectedItem();
            String tongtien = lbltongtien.getText();
            String khachdua = txtkhachdua.getText();
            String tralai = txttralai.getText();
            String chiSoSo = tongtien.replaceAll("[^0-9.]", "");
            Date selectedDate = jdate.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd_HHmmss");
            SimpleDateFormat ngaytao = new SimpleDateFormat("dd/MM/yyyy");
            String mangaytao = ngaytao.format(selectedDate);
            String timeStamp = dateFormat.format(new Date());

            String fileName = "HoaDon_" + timeStamp + ".pdf";

            PdfWriter.getInstance(doc, new FileOutputStream(path + "/" + fileName));
            doc.open();

            Paragraph content = new Paragraph();
            Paragraph content2 = new Paragraph();
            content.add(new Phrase("                                              Hoa Don Cua Hang MobileShop\n\n "
                    + "Dia Chi :So20  HangBong - BaDinh - Ha Noi\n"
                    + " SDT: 098765345\n\n")); // Thêm thông tin đầu tiên

            content.add(new Phrase("Ma Hoa Don :   " + maHoaDon + "\n"));
            content.add(new Phrase("Ngay Tao :   " + mangaytao + "\n"));
            content.add(new Phrase("Ma Nhan Vien:   " + maNhanVien + "\n"));
            content.add(new Phrase("Ma Khach Hang:   " + makhakh + "\n\n"));

            PdfPTable table = new PdfPTable(4);
            String[] headers = {"STT", "Ten San Pham", "Gia Ban", "So Luong"};
            for (String header : headers) {
                PdfPCell headerCell = new PdfPCell(new Phrase(header));
                table.addCell(headerCell);
            }

// Thêm dữ liệu từ bảng vào bảng của tài liệu PDF
            int[] selectedRows = otherTable.getSelectedRows();
            for (int i = 0; i < selectedRows.length; i++) {
                int row = selectedRows[i];
                String stt = String.valueOf(i + 1);
                String tenSanPham = String.valueOf(otherTable.getValueAt(row, 3));
                String giaBan = String.valueOf(otherTable.getValueAt(row, 4));
                String soLuong = String.valueOf(otherTable.getValueAt(row, 5));

                table.addCell(stt);
                table.addCell(tenSanPham);
                table.addCell(giaBan);
                table.addCell(soLuong);
            }
            content2.add(new Phrase("Khach Dua:" + String.valueOf(khachdua) + "$\n"));
            content2.add(new Phrase("Tien Thua:" + String.valueOf(tralai) + "$\n"));
            content2.add(new Phrase(String.valueOf(tongtien) + "$\n\n\n\n\n\n"));
            content2.add(new Phrase("                                         ----------------------------------------------------\n\n"));
            content2.add(new Phrase("                                       CAM ON QUY KHACH DA MUA HANG <3"));

            doc.add(content);
            doc.add(table);
            doc.add(content2);
        } catch (FileNotFoundException | DocumentException ex) {
            ex.printStackTrace();
        } finally {
            if (doc != null) {
                doc.close();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void apdungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apdungActionPerformed
        // TODO add your handling code here:
        String selectedDiscountName = (String) cbogiamgia.getSelectedItem();

        svgiamgia discountDB = new svgiamgia();
        List<giamgiamolde> discounts = discountDB.fiall();

        double discountValue = 0.0;

        for (giamgiamolde discount : discounts) {
            if (discount.getTenMaGiamGia().equals(selectedDiscountName)) {
                discountValue = discount.getGiam();
                break;
            }
        }

        String currentTotal = lbltongtien.getText();
        double total = Double.parseDouble(currentTotal.replaceAll("[^\\d.]", ""));

        double discountAmount = (discountValue / 100) * total;
        total -= discountAmount;

        lbltongtien.setText("tongtien: " + total);
    }//GEN-LAST:event_apdungActionPerformed

    private void otherTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_otherTableMouseClicked


    }//GEN-LAST:event_otherTableMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        int row = otherTable.getSelectedRow();
        if (row < 0) {
            return;
        }

        String maHoaDonString = otherTable.getValueAt(row, 1).toString(); // Lấy mã hóa đơn từ cột 1 (vị trí 0)
        int maHoaDon = 0;

        try {
            maHoaDon = Integer.parseInt(maHoaDonString);
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
            return;
        }

// Thực hiện truy vấn để lấy trạng thái của mã hóa đơn từ cơ sở dữ liệu
        List<HoaDon> danhSachHoaDon = hd.checktrunghoadon(maHoaDonString);

        if (!danhSachHoaDon.isEmpty()) {
            // Lấy trạng thái của mã hóa đơn đầu tiên (giả sử chỉ có một mã hóa đơn duy nhất trong danh sách)
            int trangThaiHoaDon = danhSachHoaDon.get(0).getTrangthai();

            if (trangThaiHoaDon == 1) {
                JOptionPane.showMessageDialog(this, "Sản phẩm này đã thanh toán và không thể xóa khỏi hóa Đơn chi tiết");
                return; // Dừng lại nếu trạng thái là 1
            }
        }
// Tiếp tục thực hiện các thao tác khi trạng thái không phải là 1
        String maIMEIString = otherTable.getValueAt(row, 6).toString();
        int maIMEI = 0;

        try {
            maIMEI = Integer.parseInt(maIMEIString);
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
            return;
        }
        String mahdct = otherTable.getValueAt(row, 0).toString();
        int mahdctt = 0;

        try {
            mahdctt = Integer.parseInt(mahdct);
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
            return;
        }
        String maSPCT = otherTable.getValueAt(row, 2).toString();
        int confirmResult = JOptionPane.showConfirmDialog(
                this,
                "Bạn có chắc chắn muốn bỏ sản phẩm này không?",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION
        );
        if (confirmResult == JOptionPane.YES_OPTION) {
            boolean them = im.themimeitutable(maIMEI, maSPCT);
            if (them) {
            } else {
            }
            boolean xoa = hdctt.xoahdct(mahdctt);
            if (xoa) {
            } else {
            }
        }
        fillChiTietSanPHam();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtkhachduaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkhachduaActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_txtkhachduaActionPerformed

    private void txttralaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttralaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttralaiActionPerformed

    private void txtkhachduaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtkhachduaMouseExited
        // TODO add your handling code here:
        tinhtienthua();
    }//GEN-LAST:event_txtkhachduaMouseExited

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        themkhachhang kh = new themkhachhang();
        // Thêm SuaMauSac vào một JFrame mới
        JFrame frame = new JFrame("Thêm Khách Hàng ");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Đóng chỉ frame này khi đóng
        frame.add(kh);
        // Đặt kích thước và hiển thị frame
        frame.setSize(1100, 500); // Thay đổi kích thước tùy theo nhu cầu
        frame.setVisible(true);


    }//GEN-LAST:event_jLabel4MouseClicked

    private void cbokhachhangMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbokhachhangMouseExited
        // TODO add your handling code here:
        fillComboBoxes();
    }//GEN-LAST:event_cbokhachhangMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChucNangBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChucNangBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChucNangBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChucNangBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChucNangBanHang().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apdung;
    private javax.swing.JComboBox<String> cbogiamgia;
    private javax.swing.JComboBox<String> cbokhachhang;
    private javax.swing.JComboBox<String> cbonhanvien;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.toedter.calendar.JDateChooser jdate;
    private javax.swing.JLabel lbltongtien;
    private javax.swing.JTable otherTable;
    private javax.swing.JTable tblhoadon;
    private javax.swing.JTable tblspct;
    private javax.swing.JLabel tralai2;
    private javax.swing.JTextField txtkhachdua;
    private javax.swing.JTextField txtmahoadon;
    private javax.swing.JTextField txttralai;
    // End of variables declaration//GEN-END:variables
}
